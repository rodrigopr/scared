package com.github.rodrigopr.scared.mapping

import com.github.rodrigopr.scared.annotations.Id

class Field(val field: java.lang.reflect.Field) {

  field.setAccessible(true)
  val name = field.getName

  val fieldType = field.getType

  private val idAnnotation = Option(field.getAnnotation(classOf[Id]))
  var isId = idAnnotation.isDefined

  val typeMatchAutoGenerate =
    fieldType.isAssignableFrom(classOf[java.lang.Long]) || fieldType.isAssignableFrom(classOf[Long])

  val canAutoGenerate = idAnnotation.map(id => id.autoGenerated && typeMatchAutoGenerate).getOrElse(typeMatchAutoGenerate)
}
